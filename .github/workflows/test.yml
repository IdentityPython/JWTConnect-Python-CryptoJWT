name: Test

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full python version
        id: full-python-version
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install and configure Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install
      - name: Run pytest
        run: |
          poetry run pytest -vvv -ra --cov=cryptojwt --isort --black
      #- name: Run codecov
      #  run: |
      #    poetry run codecov
